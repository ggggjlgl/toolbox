import { VerticalBox, HorizontalBox, ComboBox, Button, TextEdit } from "std-widgets.slint";
import { FuncName, RenameFilesRun } from "models.slint";

export component RenameFilesPanel inherits VerticalBox {
    in-out property <FuncName> name;
    in-out property <RenameFilesRun> run_info: {
        method: method.current-value,
        path: path.text,
        specify_characters: specify_characters.text,
    };
    callback select_path() -> string;
    callback run(RenameFilesRun);
    HorizontalBox {
        height: parent.height * (1/6);
        Text {
            vertical-alignment: center;
            width: parent.width / 3;
            text: "请选择批量修改方法：";
        }
        method := ComboBox {
            height: parent.height / 2;
            width: parent.width / 2;
            current-index: 0;
            model: [
                "批量移除指定字符",
                "批量移除指定前缀",
                "批量移除指定后缀",
                "批量新增指定前缀",
                "批量新增指定后缀",
                "批量替换指定前缀",
                "批量替换指定后缀",
            ];
        }
    }
    HorizontalBox {
        height: parent.height * (1/6);
        Text {
            vertical-alignment: center;
            width: parent.width / 3;
            text: "请选择批量路径：";
        }
        path := TextEdit {
            height: parent.height / 5 * 3;
            width: parent.width / 3;
            text: "/";
        }
        Button {
            height: parent.height / 2;
            text: "选择";
            colorize-icon: true;
            width: 60px;
            clicked => {
                path.text = root.select_path()
            }
        }
    }
    HorizontalBox {
        height: parent.height * (1/6);
        Text {
            width: parent.width / 3;
            vertical-alignment: center;
            text: "请指定字符：";
        }
        specify_characters := TextEdit {
            height: parent.height / 2;
            width: parent.width / 2;
            text: "";
        }
        
    }
    HorizontalBox {
        height: parent.height * (1/8);
        TextEdit {
            read-only: true;
            wrap: TextWrap.word-wrap;
            height: parent.height;
            text: "注意：替换字符类方法须同时提供旧字符和新字符，并使用'-批量替换至-'连接。例如：旧字符串批量替换至新字符串";
        }
        
    }
    HorizontalBox {
        height: parent.height * (1/6);
        width: parent.width;
        Button {
            width: 60px;
            text: "清除";
            colorize-icon: true;
            clicked => {
                method.current-index = 0;
                method.current-value = method.model[method.current-index];
                path.text = "";
                specify-characters.text = "";
            }
        }
        HorizontalBox {
            height: parent.height;
            width: 260px;
        }
        Button {
            width: 60px;
            text: "运行";
            colorize-icon: true;
            clicked => {
                root.run(run_info)
            }
        }
        
    }
}